<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!--扫描service包下的所有注解-->
    <context:component-scan base-package="com.zwhzzz.Service,com.zwhzzz.Pojo"/>
    <!-- 配置连接池 -->
    <!--引入数据库的数据源-->
    <!--<context:property-placeholder location="classpath:dbconfig.properties"/>-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 指定连接数据库的驱动 -->
        <!--org.mariadb.jdbc.Driver-->
        <property name="driverClass" value="com.mysql.jdbc.Driver" />
        <!-- 指定连接数据库的URL -->
        <!--jdbc:mariadb://localhost:3306-->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/SSMHotel?characterEncoding=UTF-8" />
        <!-- 指定连接数据库的用户名 -->
        <property name="user" value="root" />
        <!-- 指定连接数据库的密码 -->
        <property name="password" value="123" />
        <!-- 指定连接数据库连接池的最大连接数 -->
        <property name="maxPoolSize" value="10" />
        <!-- 指定连接数据库连接池的最小连接数 -->
        <property name="minPoolSize" value="1" />
        <!-- 指定连接数据库连接池的初始化连接数 -->
        <property name="initialPoolSize" value="1" />
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 用它来解决mysql 8小时自动释放连接的问题 -->
        <property name="maxIdleTime" value="28000" />
    </bean>

    <!--事务管理器，依赖于数据源-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启事务注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--配置Mybatis工厂-->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--注入数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!--制定mybatis的配置主文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--指定mybatis的mapper文件的位置-->
        <property name="mapperLocations">
            <array>
                    <value>classpath:mapper/*.xml</value>
            </array>
        </property>
    </bean>

    <!-- 配置mapper扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.zwhzzz.Mapper">
        </property>
    </bean>

    <!--配置一个批量插入的sqlSession-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="SqlSessionFactory"></constructor-arg>
        <constructor-arg name="executorType" value="BATCH"></constructor-arg>
    </bean>

</beans>